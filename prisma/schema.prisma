generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model artists {
  id          Int        @id
  title       String?    @db.VarChar(100)
  sort_title  String?    @db.VarChar(100)
  is_artist   Boolean?
  birth_date  Int?
  death_date  Int?
  description String?
  artworks    artworks[]
}

model artwork_types {
  id       Int        @id
  title    String?    @db.VarChar(50)
  artworks artworks[]
}

model artworks {
  id                   Int                    @id
  id_artist            Int?
  id_department        Int?
  id_artwork_type      Int?
  date_start           Int?
  date_end             Int?
  date_display         String?                @db.VarChar(300)
  place_of_origin      String?                @db.VarChar(300)
  title                String?
  medium_display       String?
  dimensions           String?
  api_link             String?                @db.VarChar(300)
  artists              artists?               @relation(fields: [id_artist], references: [id], onDelete: NoAction, onUpdate: NoAction)
  artwork_types        artwork_types?         @relation(fields: [id_artwork_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  departments          departments?           @relation(fields: [id_department], references: [id], onDelete: NoAction, onUpdate: NoAction)
  artworks_categories  artworks_categories[]
  artworks_exhibitions artworks_exhibitions[]
}

model artworks_categories {
  id          Int         @id @default(autoincrement())
  id_category Int?
  id_artwork  Int?
  artworks    artworks?   @relation(fields: [id_artwork], references: [id], onDelete: NoAction, onUpdate: NoAction)
  categories  categories? @relation(fields: [id_category], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model artworks_exhibitions {
  id            Int          @id @default(autoincrement())
  id_artwork    Int?
  id_exhibition Int?
  artworks      artworks?    @relation(fields: [id_artwork], references: [id], onDelete: NoAction, onUpdate: NoAction)
  exhibitions   exhibitions? @relation(fields: [id_exhibition], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model categories {
  id                  Int                   @id
  title               String?               @db.VarChar(100)
  subtype             String?               @db.VarChar(50)
  artworks_categories artworks_categories[]
}

model departments {
  id       Int        @id
  title    String?    @db.VarChar(50)
  artworks artworks[]
}

model exhibitions {
  id                   Int                    @id @default(autoincrement())
  title                String?                @db.VarChar(300)
  description          String?
  date_start           DateTime?              @db.Date
  date_end             DateTime?              @db.Date
  location             String?                @db.VarChar(300)
  artworks_exhibitions artworks_exhibitions[]
}
